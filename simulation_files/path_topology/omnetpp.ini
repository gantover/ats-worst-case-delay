[General]
network = tsn.TSN_Network
sim-time-limit = 1.0s

# enable multiple canvas visualizers
*.visualizer.typename = "IntegratedMultiCanvasVisualizer"

# network route activity visualization
*.visualizer.numNetworkRouteVisualizers = 1
*.visualizer.networkRouteVisualizer[*].displayRoutes = true
*.visualizer.networkRouteVisualizer[0].packetFilter = "\"ats*\""
*.visualizer.networkRouteVisualizer[0].lineColor = "red1"

*.*.eth[*].bitrate = 1Gbps

# packet processing delay
*.*.bridging.directionReverser.delayer.typename = "PacketDelayer"
*.*.bridging.directionReverser.delayer.delay = 8us

*.ES_1.numApps = 2
*.ES_2.numApps = 3
*.ES_3.numApps = 2
*.ES_4.numApps = 1
*.ES_5.numApps = 2
*.ES_6.numApps = 1
*.ES_7.numApps = 2
*.ES_8.numApps = 2
*.ES_9.numApps = 3
*.ES_10.numApps = 3
*.ES_11.numApps = 1
*.ES_12.numApps = 2
*.ES_13.numApps = 1
*.ES_14.numApps = 2
*.ES_15.numApps = 2
*.ES_16.numApps = 2
*.ES_17.numApps = 1
*.ES_18.numApps = 4
*.ES_19.numApps = 3
*.ES_20.numApps = 1
*.ES_1.app[0].typename = "UdpSourceApp"
*.ES_1.app[0].display-name = "ats-p3"
*.ES_1.app[0].io.destAddress = "ES_15"
*.ES_1.app[0].io.destPort = 1
*.ES_1.app[0].source.productionInterval = 1000us
*.ES_1.app[0].source.initialProductionOffset = 1000us
*.ES_1.app[0].source.packetLength = 683B
*.ES_1.app[1].typename = "UdpSinkApp"
*.ES_1.app[1].io.localPort = 17
*.ES_2.app[0].typename = "UdpSourceApp"
*.ES_2.app[0].display-name = "ats-p3"
*.ES_2.app[0].io.destAddress = "ES_18"
*.ES_2.app[0].io.destPort = 2
*.ES_2.app[0].source.productionInterval = 2000us
*.ES_2.app[0].source.initialProductionOffset = 2000us
*.ES_2.app[0].source.packetLength = 915B
*.ES_2.app[1..2].typename = "UdpSinkApp"
*.ES_2.app[1].io.localPort = 11
*.ES_2.app[2].io.localPort = 16
*.ES_3.app[0].typename = "UdpSourceApp"
*.ES_3.app[0].display-name = "ats-p2"
*.ES_3.app[0].io.destAddress = "ES_5"
*.ES_3.app[0].io.destPort = 3
*.ES_3.app[0].source.productionInterval = 1000us
*.ES_3.app[0].source.initialProductionOffset = 1000us
*.ES_3.app[0].source.packetLength = 958B
*.ES_3.app[1].typename = "UdpSinkApp"
*.ES_3.app[1].io.localPort = 19
*.ES_4.app[0].typename = "UdpSourceApp"
*.ES_4.app[0].display-name = "ats-p2"
*.ES_4.app[0].io.destAddress = "ES_19"
*.ES_4.app[0].io.destPort = 4
*.ES_4.app[0].source.productionInterval = 2000us
*.ES_4.app[0].source.initialProductionOffset = 2000us
*.ES_4.app[0].source.packetLength = 687B
*.ES_5.app[0].typename = "UdpSourceApp"
*.ES_5.app[0].display-name = "ats-p3"
*.ES_5.app[0].io.destAddress = "ES_16"
*.ES_5.app[0].io.destPort = 5
*.ES_5.app[0].source.productionInterval = 2000us
*.ES_5.app[0].source.initialProductionOffset = 2000us
*.ES_5.app[0].source.packetLength = 959B
*.ES_5.app[1].typename = "UdpSinkApp"
*.ES_5.app[1].io.localPort = 3
*.ES_6.app[0].typename = "UdpSourceApp"
*.ES_6.app[0].display-name = "ats-p1"
*.ES_6.app[0].io.destAddress = "ES_7"
*.ES_6.app[0].io.destPort = 6
*.ES_6.app[0].source.productionInterval = 2000us
*.ES_6.app[0].source.initialProductionOffset = 2000us
*.ES_6.app[0].source.packetLength = 562B
*.ES_7.app[0].typename = "UdpSourceApp"
*.ES_7.app[0].display-name = "ats-p2"
*.ES_7.app[0].io.destAddress = "ES_18"
*.ES_7.app[0].io.destPort = 7
*.ES_7.app[0].source.productionInterval = 2000us
*.ES_7.app[0].source.initialProductionOffset = 2000us
*.ES_7.app[0].source.packetLength = 923B
*.ES_7.app[1].typename = "UdpSinkApp"
*.ES_7.app[1].io.localPort = 6
*.ES_8.app[0].typename = "UdpSourceApp"
*.ES_8.app[0].display-name = "ats-p0"
*.ES_8.app[0].io.destAddress = "ES_10"
*.ES_8.app[0].io.destPort = 8
*.ES_8.app[0].source.productionInterval = 2000us
*.ES_8.app[0].source.initialProductionOffset = 2000us
*.ES_8.app[0].source.packetLength = 519B
*.ES_8.app[1].typename = "UdpSinkApp"
*.ES_8.app[1].io.localPort = 9
*.ES_9.app[0].typename = "UdpSourceApp"
*.ES_9.app[0].display-name = "ats-p2"
*.ES_9.app[0].io.destAddress = "ES_8"
*.ES_9.app[0].io.destPort = 9
*.ES_9.app[0].source.productionInterval = 1000us
*.ES_9.app[0].source.initialProductionOffset = 1000us
*.ES_9.app[0].source.packetLength = 653B
*.ES_9.app[1..2].typename = "UdpSinkApp"
*.ES_9.app[1].io.localPort = 10
*.ES_9.app[2].io.localPort = 14
*.ES_10.app[0].typename = "UdpSourceApp"
*.ES_10.app[0].display-name = "ats-p7"
*.ES_10.app[0].io.destAddress = "ES_9"
*.ES_10.app[0].io.destPort = 10
*.ES_10.app[0].source.productionInterval = 1000us
*.ES_10.app[0].source.initialProductionOffset = 1000us
*.ES_10.app[0].source.packetLength = 536B
*.ES_10.app[1..2].typename = "UdpSinkApp"
*.ES_10.app[1].io.localPort = 8
*.ES_10.app[2].io.localPort = 15
*.ES_11.app[0].typename = "UdpSourceApp"
*.ES_11.app[0].display-name = "ats-p4"
*.ES_11.app[0].io.destAddress = "ES_2"
*.ES_11.app[0].io.destPort = 11
*.ES_11.app[0].source.productionInterval = 2000us
*.ES_11.app[0].source.initialProductionOffset = 2000us
*.ES_11.app[0].source.packetLength = 919B
*.ES_12.app[0].typename = "UdpSourceApp"
*.ES_12.app[0].display-name = "ats-p4"
*.ES_12.app[0].io.destAddress = "ES_19"
*.ES_12.app[0].io.destPort = 12
*.ES_12.app[0].source.productionInterval = 1000us
*.ES_12.app[0].source.initialProductionOffset = 1000us
*.ES_12.app[0].source.packetLength = 784B
*.ES_12.app[1].typename = "UdpSinkApp"
*.ES_12.app[1].io.localPort = 18
*.ES_13.app[0].typename = "UdpSourceApp"
*.ES_13.app[0].display-name = "ats-p6"
*.ES_13.app[0].io.destAddress = "ES_14"
*.ES_13.app[0].io.destPort = 13
*.ES_13.app[0].source.productionInterval = 1000us
*.ES_13.app[0].source.initialProductionOffset = 1000us
*.ES_13.app[0].source.packetLength = 860B
*.ES_14.app[0].typename = "UdpSourceApp"
*.ES_14.app[0].display-name = "ats-p1"
*.ES_14.app[0].io.destAddress = "ES_9"
*.ES_14.app[0].io.destPort = 14
*.ES_14.app[0].source.productionInterval = 1000us
*.ES_14.app[0].source.initialProductionOffset = 1000us
*.ES_14.app[0].source.packetLength = 560B
*.ES_14.app[1].typename = "UdpSinkApp"
*.ES_14.app[1].io.localPort = 13
*.ES_15.app[0].typename = "UdpSourceApp"
*.ES_15.app[0].display-name = "ats-p1"
*.ES_15.app[0].io.destAddress = "ES_10"
*.ES_15.app[0].io.destPort = 15
*.ES_15.app[0].source.productionInterval = 1000us
*.ES_15.app[0].source.initialProductionOffset = 1000us
*.ES_15.app[0].source.packetLength = 723B
*.ES_15.app[1].typename = "UdpSinkApp"
*.ES_15.app[1].io.localPort = 1
*.ES_16.app[0].typename = "UdpSourceApp"
*.ES_16.app[0].display-name = "ats-p0"
*.ES_16.app[0].io.destAddress = "ES_2"
*.ES_16.app[0].io.destPort = 16
*.ES_16.app[0].source.productionInterval = 1000us
*.ES_16.app[0].source.initialProductionOffset = 1000us
*.ES_16.app[0].source.packetLength = 869B
*.ES_16.app[1].typename = "UdpSinkApp"
*.ES_16.app[1].io.localPort = 5
*.ES_17.app[0].typename = "UdpSourceApp"
*.ES_17.app[0].display-name = "ats-p5"
*.ES_17.app[0].io.destAddress = "ES_1"
*.ES_17.app[0].io.destPort = 17
*.ES_17.app[0].source.productionInterval = 1000us
*.ES_17.app[0].source.initialProductionOffset = 1000us
*.ES_17.app[0].source.packetLength = 750B
*.ES_18.app[0].typename = "UdpSourceApp"
*.ES_18.app[0].display-name = "ats-p6"
*.ES_18.app[0].io.destAddress = "ES_12"
*.ES_18.app[0].io.destPort = 18
*.ES_18.app[0].source.productionInterval = 1000us
*.ES_18.app[0].source.initialProductionOffset = 1000us
*.ES_18.app[0].source.packetLength = 791B
*.ES_18.app[1..3].typename = "UdpSinkApp"
*.ES_18.app[1].io.localPort = 2
*.ES_18.app[2].io.localPort = 7
*.ES_18.app[3].io.localPort = 20
*.ES_19.app[0].typename = "UdpSourceApp"
*.ES_19.app[0].display-name = "ats-p1"
*.ES_19.app[0].io.destAddress = "ES_3"
*.ES_19.app[0].io.destPort = 19
*.ES_19.app[0].source.productionInterval = 1000us
*.ES_19.app[0].source.initialProductionOffset = 1000us
*.ES_19.app[0].source.packetLength = 656B
*.ES_19.app[1..2].typename = "UdpSinkApp"
*.ES_19.app[1].io.localPort = 4
*.ES_19.app[2].io.localPort = 12
*.ES_20.app[0].typename = "UdpSourceApp"
*.ES_20.app[0].display-name = "ats-p2"
*.ES_20.app[0].io.destAddress = "ES_18"
*.ES_20.app[0].io.destPort = 20
*.ES_20.app[0].source.productionInterval = 2000us
*.ES_20.app[0].source.initialProductionOffset = 2000us
*.ES_20.app[0].source.packetLength = 968B

*.ES*.hasUdp = firstAvailableOrEmpty("Udp") != ""

# steering stream identification and coding
*.ES*.bridging.streamIdentifier.identifier.mapping = [{stream :"ats-p0", packetFilter: expr(udp.destPort == 8 || udp.destPort == 16)}, {stream :"ats-p1", packetFilter: expr(udp.destPort == 6 || udp.destPort == 14 || udp.destPort == 15 || udp.destPort == 19)}, {stream :"ats-p2", packetFilter: expr(udp.destPort == 3 || udp.destPort == 4 || udp.destPort == 7 || udp.destPort == 9 || udp.destPort == 20)}, {stream :"ats-p3", packetFilter: expr(udp.destPort == 1 || udp.destPort == 2 || udp.destPort == 5)}, {stream :"ats-p4", packetFilter: expr(udp.destPort == 11 || udp.destPort == 12)}, {stream :"ats-p5", packetFilter: expr(udp.destPort == 17)}, {stream :"ats-p6", packetFilter: expr(udp.destPort == 13 || udp.destPort == 18)}, {stream :"ats-p7", packetFilter: expr(udp.destPort == 10)}]

*.ES*.bridging.streamFilter.ingress.classifier.mapping = { "ats-p0": 0 , "ats-p1": 1, "ats-p2": 2, "ats-p3": 3, "ats-p4": 4, "ats-p5": 5, "ats-p6": 6, "ats-p7": 7}
*.ES*.eth[*].macLayer.queue.numTrafficClasses = 8
*.ES*.eth[*].macLayer.queue.numQueues = 8
*.ES*.eth[*].macLayer.queue.*[0].display-name = "ats-p0"
*.ES*.eth[*].macLayer.queue.*[1].display-name = "ats-p1"
*.ES*.eth[*].macLayer.queue.*[2].display-name = "ats-p2"
*.ES*.eth[*].macLayer.queue.*[3].display-name = "ats-p3"
*.ES*.eth[*].macLayer.queue.*[4].display-name = "ats-p4"
*.ES*.eth[*].macLayer.queue.*[5].display-name = "ats-p5"
*.ES*.eth[*].macLayer.queue.*[6].display-name = "ats-p6"
*.ES*.eth[*].macLayer.queue.*[7].display-name = "ats-p7"

# client stream encoding
*.ES*.bridging.streamCoder.encoder.mapping = [{stream: "ats-p0", pcp: 0}, {stream: "ats-p1", pcp: 1}, {stream: "ats-p2", pcp: 2}, {stream: "ats-p3", pcp: 3}, {stream: "ats-p4", pcp: 4}, {stream: "ats-p5", pcp: 5}, {stream: "ats-p6", pcp: 6}, {stream: "ats-p7", pcp: 7}]

# enable streams
*.Switch*.hasIncomingStreams = true
*.Switch*.hasOutgoingStreams = true
*.ES*.hasIncomingStreams = true
*.ES*.hasOutgoingStreams = true

# stream coder mappings for switches
*.Switch*.bridging.streamCoder.encoder.mapping = [{stream: "ats-p0", pcp: 0}, {stream: "ats-p1", pcp: 1}, {stream: "ats-p2", pcp: 2}, {stream: "ats-p3", pcp: 3}, {stream: "ats-p4", pcp: 4}, {stream: "ats-p5", pcp: 5}, {stream: "ats-p6", pcp: 6}, {stream: "ats-p7", pcp: 7}]
*.Switch*.bridging.streamCoder.decoder.mapping = [{stream: "ats-p0", pcp: 0}, {stream: "ats-p1", pcp: 1}, {stream: "ats-p2", pcp: 2}, {stream: "ats-p3", pcp: 3}, {stream: "ats-p4", pcp: 4}, {stream: "ats-p5", pcp: 5}, {stream: "ats-p6", pcp: 6}, {stream: "ats-p7", pcp: 7}]
*.Switch*.eth[*].macLayer.queue.classifier.mapping = [[0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1], [2,2,2,2,2,2,2,2], [3,3,3,3,3,3,3,3], [4,4,4,4,4,4,4,4], [5,5,5,5,5,5,5,5], [6,6,6,6,6,6,6,6], [7,7,7,7,7,7,7,7]]

# enable ingress per-stream filtering
*.Switch*.hasIngressTrafficFiltering = true

# enable egress traffic shaping
*.*.hasEgressTrafficShaping = true

# asynchronous shaper traffic metering
*.Switch*.bridging.streamFilter.ingress.numStreams = 8
*.Switch*.bridging.streamFilter.ingress.classifier.mapping = { "ats-p0": 0 , "ats-p1": 1, "ats-p2": 2, "ats-p3": 3, "ats-p4": 4, "ats-p5": 5, "ats-p6": 6, "ats-p7": 7 }
*.Switch*.bridging.streamFilter.ingress.*[0].display-name = "ats-p0"
*.Switch*.bridging.streamFilter.ingress.*[1].display-name = "ats-p1"
*.Switch*.bridging.streamFilter.ingress.*[2].display-name = "ats-p2"
*.Switch*.bridging.streamFilter.ingress.*[3].display-name = "ats-p3"
*.Switch*.bridging.streamFilter.ingress.*[4].display-name = "ats-p4"
*.Switch*.bridging.streamFilter.ingress.*[5].display-name = "ats-p5"
*.Switch*.bridging.streamFilter.ingress.*[6].display-name = "ats-p6"
*.Switch*.bridging.streamFilter.ingress.*[7].display-name = "ats-p7"
*.Switch*.bridging.streamFilter.ingress.meter[*].typename = "EligibilityTimeMeter"
*.Switch*.bridging.streamFilter.ingress.filter[*].typename = "EligibilityTimeFilter"

*.Switch*.bridging.streamFilter.ingress.meter[0].committedInformationRate = 100Mbps
*.Switch*.bridging.streamFilter.ingress.meter[0].committedBurstSize = 500B
*.Switch*.bridging.streamFilter.ingress.meter[1].committedInformationRate = 100Mbps
*.Switch*.bridging.streamFilter.ingress.meter[1].committedBurstSize = 500B
*.Switch*.bridging.streamFilter.ingress.meter[2].committedInformationRate = 100Mbps
*.Switch*.bridging.streamFilter.ingress.meter[2].committedBurstSize = 500B
*.Switch*.bridging.streamFilter.ingress.meter[3].committedInformationRate = 100Mbps
*.Switch*.bridging.streamFilter.ingress.meter[3].committedBurstSize = 500B
*.Switch*.bridging.streamFilter.ingress.meter[4].committedInformationRate = 100Mbps
*.Switch*.bridging.streamFilter.ingress.meter[4].committedBurstSize = 500B
*.Switch*.bridging.streamFilter.ingress.meter[5].committedInformationRate = 100Mbps
*.Switch*.bridging.streamFilter.ingress.meter[5].committedBurstSize = 500B
*.Switch*.bridging.streamFilter.ingress.meter[6].committedInformationRate = 100Mbps
*.Switch*.bridging.streamFilter.ingress.meter[6].committedBurstSize = 500B
*.Switch*.bridging.streamFilter.ingress.meter[7].committedInformationRate = 100Mbps
*.Switch*.bridging.streamFilter.ingress.meter[7].committedBurstSize = 500B

# asynchronous traffic shaping
*.Switch*.eth[*].macLayer.queue.numTrafficClasses = 8
*.Switch*.eth[*].macLayer.queue.numQueues = 8
*.Switch*.eth[*].macLayer.queue.*[0].display-name = "ats-p0"
*.Switch*.eth[*].macLayer.queue.*[1].display-name = "ats-p1"
*.Switch*.eth[*].macLayer.queue.*[2].display-name = "ats-p2"
*.Switch*.eth[*].macLayer.queue.*[3].display-name = "ats-p3"
*.Switch*.eth[*].macLayer.queue.*[4].display-name = "ats-p4"
*.Switch*.eth[*].macLayer.queue.*[5].display-name = "ats-p5"
*.Switch*.eth[*].macLayer.queue.*[6].display-name = "ats-p6"
*.Switch*.eth[*].macLayer.queue.*[7].display-name = "ats-p7"
*.Switch*.eth[*].macLayer.queue.queue[*].typename = "EligibilityTimeQueue"
*.Switch*.eth[*].macLayer.queue.transmissionSelectionAlgorithm[*].typename = "Ieee8021qAsynchronousShaper"
