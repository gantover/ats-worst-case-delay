[General]
network = tsn.path_TSN_Network
sim-time-limit = 1.0s

# enable multiple canvas visualizers
*.visualizer.typename = "IntegratedMultiCanvasVisualizer"

# network route activity visualization
*.visualizer.numNetworkRouteVisualizers = 1
*.visualizer.networkRouteVisualizer[*].displayRoutes = true
*.visualizer.networkRouteVisualizer[0].packetFilter = "\"ats*\""
*.visualizer.networkRouteVisualizer[0].lineColor = "red1"

*.*.eth[*].bitrate = 1Gbps

# packet processing delay
*.*.bridging.directionReverser.delayer.typename = "PacketDelayer"
*.*.bridging.directionReverser.delayer.delay = 8us

*.ES_1.numApps = 5
*.ES_2.numApps = 1
*.ES_3.numApps = 1
*.ES_4.numApps = 1
*.ES_5.numApps = 3
*.ES_6.numApps = 1
*.ES_7.numApps = 1
*.ES_8.numApps = 3
*.ES_9.numApps = 3
*.ES_10.numApps = 1
*.ES_1.app[0].typename = "UdpSourceApp"
*.ES_1.app[0].display-name = "ats"
*.ES_1.app[0].io.destAddress = "ES_5"
*.ES_1.app[0].io.destPort = 1
*.ES_1.app[0].source.productionInterval = 1000us
*.ES_1.app[0].source.initialProductionOffset = 1000us
*.ES_1.app[0].source.packetLength = 847B
*.ES_1.app[1..4].typename = "UdpSinkApp"
*.ES_1.app[1].io.localPort = 4
*.ES_1.app[2].io.localPort = 7
*.ES_1.app[3].io.localPort = 9
*.ES_1.app[4].io.localPort = 10
*.ES_2.app[0].typename = "UdpSourceApp"
*.ES_2.app[0].display-name = "ats"
*.ES_2.app[0].io.destAddress = "ES_8"
*.ES_2.app[0].io.destPort = 2
*.ES_2.app[0].source.productionInterval = 2000us
*.ES_2.app[0].source.initialProductionOffset = 2000us
*.ES_2.app[0].source.packetLength = 722B
*.ES_3.app[0].typename = "UdpSourceApp"
*.ES_3.app[0].display-name = "ats"
*.ES_3.app[0].io.destAddress = "ES_8"
*.ES_3.app[0].io.destPort = 3
*.ES_3.app[0].source.productionInterval = 1000us
*.ES_3.app[0].source.initialProductionOffset = 1000us
*.ES_3.app[0].source.packetLength = 508B
*.ES_4.app[0].typename = "UdpSourceApp"
*.ES_4.app[0].display-name = "ats"
*.ES_4.app[0].io.destAddress = "ES_1"
*.ES_4.app[0].io.destPort = 4
*.ES_4.app[0].source.productionInterval = 2000us
*.ES_4.app[0].source.initialProductionOffset = 2000us
*.ES_4.app[0].source.packetLength = 720B
*.ES_5.app[0].typename = "UdpSourceApp"
*.ES_5.app[0].display-name = "ats"
*.ES_5.app[0].io.destAddress = "ES_9"
*.ES_5.app[0].io.destPort = 5
*.ES_5.app[0].source.productionInterval = 2000us
*.ES_5.app[0].source.initialProductionOffset = 2000us
*.ES_5.app[0].source.packetLength = 547B
*.ES_5.app[1..2].typename = "UdpSinkApp"
*.ES_5.app[1].io.localPort = 1
*.ES_5.app[2].io.localPort = 6
*.ES_6.app[0].typename = "UdpSourceApp"
*.ES_6.app[0].display-name = "ats"
*.ES_6.app[0].io.destAddress = "ES_5"
*.ES_6.app[0].io.destPort = 6
*.ES_6.app[0].source.productionInterval = 2000us
*.ES_6.app[0].source.initialProductionOffset = 2000us
*.ES_6.app[0].source.packetLength = 658B
*.ES_7.app[0].typename = "UdpSourceApp"
*.ES_7.app[0].display-name = "ats"
*.ES_7.app[0].io.destAddress = "ES_1"
*.ES_7.app[0].io.destPort = 7
*.ES_7.app[0].source.productionInterval = 2000us
*.ES_7.app[0].source.initialProductionOffset = 2000us
*.ES_7.app[0].source.packetLength = 993B
*.ES_8.app[0].typename = "UdpSourceApp"
*.ES_8.app[0].display-name = "ats"
*.ES_8.app[0].io.destAddress = "ES_9"
*.ES_8.app[0].io.destPort = 8
*.ES_8.app[0].source.productionInterval = 2000us
*.ES_8.app[0].source.initialProductionOffset = 2000us
*.ES_8.app[0].source.packetLength = 746B
*.ES_8.app[1..2].typename = "UdpSinkApp"
*.ES_8.app[1].io.localPort = 2
*.ES_8.app[2].io.localPort = 3
*.ES_9.app[0].typename = "UdpSourceApp"
*.ES_9.app[0].display-name = "ats"
*.ES_9.app[0].io.destAddress = "ES_1"
*.ES_9.app[0].io.destPort = 9
*.ES_9.app[0].source.productionInterval = 2000us
*.ES_9.app[0].source.initialProductionOffset = 2000us
*.ES_9.app[0].source.packetLength = 969B
*.ES_9.app[1..2].typename = "UdpSinkApp"
*.ES_9.app[1].io.localPort = 5
*.ES_9.app[2].io.localPort = 8
*.ES_10.app[0].typename = "UdpSourceApp"
*.ES_10.app[0].display-name = "ats"
*.ES_10.app[0].io.destAddress = "ES_1"
*.ES_10.app[0].io.destPort = 10
*.ES_10.app[0].source.productionInterval = 2000us
*.ES_10.app[0].source.initialProductionOffset = 2000us
*.ES_10.app[0].source.packetLength = 676B

*.node*.hasUdp = firstAvailableOrEmpty("Udp") != ""

# steering stream identification and coding
*.node*.bridging.streamIdentifier.identifier.mapping = [
    {stream: "ats", packetFilter: expr(udp.destPort == 1)}]

# traffic configuration
*.*.eth[*].macLayer.queue.numTrafficClasses = 1
*.*.eth[*].macLayer.queue.numQueues = 1
*.*.eth[*].macLayer.queue.*[0].display-name = "ats"

# client stream encoding
*.*.bridging.streamCoder.encoder.mapping = [{stream: "ats", pcp: 6}]

# enable streams
*.*.hasIncomingStreams = true
*.*.hasOutgoingStreams = true

# stream coder mappings for switches
*.sw*.bridging.streamCoder.encoder.mapping = [{stream: "ats", pcp: 6}]
*.sw*.bridging.streamCoder.decoder.mapping = [{stream: "ats", pcp: 6}]
*.sw*.eth[*].macLayer.queue.classifier.mapping = [[0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 1], [0, 0, 0], [0, 1, 2]]

# enable ingress per-stream filtering
*.sw*.hasIngressTrafficFiltering = true

# enable egress traffic shaping
*.*.hasEgressTrafficShaping = true

# asynchronous shaper traffic metering
*.sw*.bridging.streamFilter.ingress.numStreams = 1
*.sw*.bridging.streamFilter.ingress.classifier.mapping = { "ats": 0}
*.sw*.bridging.streamFilter.ingress.*[0].display-name = "ats"
*.sw*.bridging.streamFilter.ingress.meter[*].typename = "EligibilityTimeMeter"
*.sw*.bridging.streamFilter.ingress.filter[*].typename = "EligibilityTimeFilter"

*.sw*.bridging.streamFilter.ingress.meter[0].committedInformationRate = 10Mbps
*.sw*.bridging.streamFilter.ingress.meter[0].committedBurstSize = 500B

# asynchronous traffic shaping
*.sw*.eth[*].macLayer.queue.transmissionSelectionAlgorithm[*].typename = "Ieee8021qAsynchronousShaper"
